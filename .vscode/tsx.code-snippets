{
  // Place your app workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "TS Next Page": {
    "prefix": "next-page",
    "body": [
      "import { NextPage } from 'next';",
      "",
      "const ${1:Page}: NextPage = () => {",
      "\treturn (",
      "\t\t<>",
      "\t\t\t$0",
      "\t\t</>",
      "\t);",
      "};",
      "",
      "export default ${1:Component};"
    ]
  },
  "TS Next Component": {
    "prefix": "next-component",
    "body": [
      "interface ${1:Component}Props {}",
      "const ${1:Component} = (_props: ${1:Component}Props) => {",
      "\treturn <>$0</>;",
      "};",
      "",
      "export default ${1:Component};",
      ""
    ]
  },
  "Component": {
    "prefix": "component-next",
    "body": [
      "import React from 'react';",
      "import styles from './${1:Component}.module.scss';",
      "",
      "interface ${1:Component}Props {",
      "\t",
      "}",
      "const ${1:Component} = (props: ${1:Component}Props) => {",
      "\treturn (",
      "\t\t<div className={`${styles.${1:Component}Container}`}>",
      "\t\t\t$0",
      "\t\t</div>",
      "\t);",
      "};",
      "",
      "export default ${1:Component};"
    ]
  },
  "Black Quotes with var": {
    "prefix": "black-quotes-with-var",
    "body": "{`${${1:expression}}`}"
  }
}
